<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.creditharmony.loan.borrow.payback.dao.DeductStatisticsReportDao">

     <!--  查询划扣统计统计信息 -->
     <select id="queryDeductStatistics" resultType="com.creditharmony.loan.borrow.payback.entity.DeductStatisticsReport">
       select 
          id,
		  ROUND(tg_really_amount,2) as tgReallyAmount,
		  ROUND(tg_sum_amount,2) as tgSumAmount,
		  tg_sum_number as tgSumNumber,
		  tg_success_number as tgSuccessNumber,
		  ROUND(not_tg_really_amount,2) as notTgReallyAmount, 
		  ROUND(not_tg_sum_amount,2) as notTgSumAmount, 
		  not_tg_sum_number as notTgSumNumber, 
		  not_tg_success_number as notTgSuccessNumber,
		  ROUND(chong_di_ti_chu_amount,2) as chongDiTiChuAmount,
		  ROUND(chong_di_ti_chu_dai_amount,2) as chongDiTiChuDaiAmount,
		  chong_di_ti_chu_number as chongDiTiChuNumber,
		  chong_di_ti_chu_dai_number as  chongDiTiChuDaiNumber,
		  create_date  as  createDate
		  from 
       jk.t_jk_deduct_Statistics
              where  create_date = to_char(now(),'yyyy-mm-dd')
     </select>
     
       <!--  查询划扣统计统计信息 -->
     <select id="queryList" resultType="com.creditharmony.loan.borrow.payback.entity.DeductStatisticsReport">
       select 
              '1' as id
     </select>
	
	<!--  如果该数据的所有平台没有通过业务配置的规则，则给这个数据一个标志 -->
	<update id="updateLimitFlag">
	    update jk.t_jk_payback_apply    set limit_flag  = '1'  where id = #{batId}
	</update>
	
	
	  <!--  查询一段时间的划扣统计统计信息 -->
     <select id="periodStatistics" resultType="com.creditharmony.loan.borrow.payback.entity.DeductStatisticsReport">
	 select  
     round(cast(a.failureNumber as  numeric)/cast(a.deductNumber as numeric)*100,2) as failureRate,
     round(cast(a.notEnoughNumber as  numeric)/cast(a.deductNumber as numeric)*100,2) as notEnoughProportion,
     a.id,
     b.label as plantCode
      from    

        ( select 
              '1' as id,
              plant_code as plantCode,
              sum(a.not_Enough_Number) as notEnoughNumber,
              sum(a.deduct_success_Number) as deductSuccessNumber,
              sum(a.deduct_Number) as deductNumber, 
             case  when  sum(a.failure_Number) is null  then 0 else 
             sum(a.failure_Number) end  as failureNumber
              from   jk.t_jk_deduct_plant_Statistics  a
              where  1=1
                <if test="beginDate != null and beginDate != ''">
					and to_date(a.create_date,'yyyy-mm-dd') &gt;= #{beginDate} <!-- 划扣日期 -->
			    </if>
				<if test="endDate != null and endDate != ''">
					and to_date(a.create_date,'yyyy-mm-dd') &lt;=  #{endDate} <!-- 划扣日期 -->
				</if>
              group by plant_code) a 
               left join (   select  value,label from   jk.t_gl_dict where type ='jk_deduct_plat' ) b 
              on a.plantCode = b.value
              where  1=1
              	<if test="plantCode != null and plantCode != ''">
					and a.plantCode = #{plantCode} <!-- 划扣平台 -->
				</if>
     </select>
</mapper>
	