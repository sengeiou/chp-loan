<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.creditharmony.loan.borrow.blue.dao.PaybackBlueDao">
<!--蓝补账号管理列表信息映射   -->
	<resultMap id="paybackBlueList" type="com.creditharmony.loan.borrow.blue.entity.PaybackBlue">
			<id column="contract_code" property="contractCode" />
			<result column="paybackId" jdbcType="VARCHAR" property="id" />
			<result column="contract_code" jdbcType="NUMERIC" property="contractCode" />
			<result column="customer_code" jdbcType="VARCHAR" property="customerCode" />	
			<result column="dict_pay_status" jdbcType="VARCHAR" property="dictPayStatus" />
			<result column="payback_day" jdbcType="VARCHAR" property="paybackDay" />
			<result column="payback_back_amount" jdbcType="VARCHAR" property="paybackBackAmount" />
			<result column="payback_month_amount" jdbcType="VARCHAR" property="paybackMonthAmount" />
			<result column="payback_bule_amount" jdbcType="VARCHAR" property="paybackBuleAmount" />
			<!-- <result column="payback_if_effective" jdbcType="VARCHAR" property="paybackIfEffective" />
			<result column="payBack_max_overdue" jdbcType="VARCHAR" property="paybackMaxOverdue" /> -->
			<result column="payback_current_month" jdbcType="VARCHAR" property="paybackCurrentMonth" />
			<result column="create_by" jdbcType="VARCHAR" property="createBy" />
			<result column="create_time" jdbcType="DATE" property="createTime" />
			<result column="modify_by" jdbcType="VARCHAR" property="modifyBy" />
			<result column="modify_time" jdbcType="DATE" property="modifyTime" />
			<result column="org_name" jdbcType="VARCHAR" property="orgName" />
		<association property="contract" javaType="com.creditharmony.loan.borrow.contract.entity.Contract">
			<id column="contract_code" property="contractCode" />
			<result column="loan_code" property="loanCode" />
			<result column="product_type" property="productType" />
			<result column="contract_amount" property="contractAmount" />
			<result column="contract_months" property="contractMonths" />
			<result column="contract_month_repay_amount" property="contractMonthRepayAmount" />
			<result column="contract_replay_day" property="contractReplayDay" />
			<result column="contract_end_day" property="contractEndDay" />
			<result column="contract_version" property="contractVersion" />
			<result column="model" property="model" />
		</association>
		<association property="loanCustomer" javaType="com.creditharmony.loan.common.entity.LoanCustomer">
			<id column="loan_code" property="loanCode" />
			<result column="customer_cert_num" property="customerCertNum" />
			<result column="customer_name" property="customerName" />
			<result column="customer_telesales_flag" property="customerTelesalesFlag"/>
		</association>
		<association property="loanInfo" javaType="com.creditharmony.loan.borrow.applyinfo.entity.LoanInfo">
			<id column="loan_code" property="loanCode" />
			<result column="loan_team_orgid" property="loanTeamOrgId" />
			<result column="loan_store_orgid" property="loanStoreOrgId" />
			<result column="dict_loan_status" property="dictLoanStatus" />
			<result column="loan_flag" property="loanFlag" />
		</association>
		<association property="loanBank" javaType="com.creditharmony.loan.common.entity.LoanBank">
			<id column="loan_code" property="loanCode" />
			<result column="loanBankId" property="id" />
			<result column="bank_account_name" property="bankAccountName" />
			<result column="bank_account" property="bankAccount" />
			<result column="bank_branch" property="bankBranch" />
			<result column="bank_name" property="bankName" />
		</association>
		<association property="urgeServicesMoney" javaType="com.creditharmony.loan.borrow.grant.entity.UrgeServicesMoney">
		<id column="r_grant_id" property="rGrantId" />
			<result column="urge_moeny" property="urgeMoeny" />
		</association>
		<association property="loanGrant" javaType="com.creditharmony.loan.borrow.grant.entity.LoanGrant">
			<id column="contract_code" property="contractCode" />
			<result column="grant_amount" property="grantAmount" />
		</association>
		<association property="paybackMonth" javaType="com.creditharmony.loan.borrow.payback.entity.PaybackMonth">
			<id column="paybackMonthId" property="id" />
			<result column="month_Penalty_Should_sum" property="monthPenaltyShouldSum" />
			<result column="month_Interest_Punishshould_Sum" property="monthInterestPunishshouldSum" />
		</association>
		<association property="jkProducts" javaType="com.creditharmony.loan.borrow.payback.entity.JkProducts">
			<id column="prduct_code" property="productCode" />
			<result column="product_name" property="productName" />
		</association>
	</resultMap>
	
    <!-- 查询蓝补账号管理列表信息 -->
	<select id="findPayback" parameterType="Map" resultMap="paybackBlueList" resultType="com.creditharmony.loan.borrow.blue.entity.PaybackBlue">
		SELECT
			p.id as id,
			p.id as paybackId, 
			p.contract_code,
			p.dict_pay_status,
			p.payback_day,
			p.payback_bule_amount,
			p.payback_month_amount,
			p.modify_time,
			p.payback_back_amount,
			p.payback_current_month,
			lc.customer_code,
			lc.customer_cert_num,
			lc.customer_name,
			lc.customer_telesales_flag,
			c.loan_code,
			c.product_type,
			c.contract_amount,
			c.contract_months,
			c.contract_month_repay_amount,
			c.contract_replay_day,
			c.contract_end_day,
			c.contract_version,
			c.model,
			org.name as org_name,
			li.dict_loan_status,
			li.loan_team_orgid,
			li.loan_store_orgid,
			d.label as loan_flag,
			lb.id as loanBankId,
			lb.loan_code,
			lb.bank_account_name,
			lb.bank_account,
			lb.bank_branch,
			lb.bank_name,
			usa.r_grant_id, 
			usa.urge_moeny,		<!-- 催收服务费 -->
			lg.grant_amount, 	<!-- 放款金额 -->
			pm.id as paybackMonthId,
			pm.MONTH_PENALTY_SHOULD as month_Penalty_Should_sum,
           	pm.MONTH_INTEREST_PUNISHSHOULD as month_Interest_Punishshould_Sum,
			pro.product_name
		from 
			jk.t_jk_payback p 
			LEFT JOIN jk.t_jk_contract c 
				ON p.contract_code = c.contract_code
			LEFT JOIN jk.t_jk_loan_customer lc 
				ON c.loan_code = lc.loan_code
			LEFT JOIN jk.t_jk_loan_info li 
				ON c.loan_code = li.loan_code
			LEFT JOIN jk.t_gl_org org 
				ON li.loan_store_orgid = org.ID
			LEFT JOIN jk.t_jk_loan_bank lb 
				ON lb.loan_code = c.loan_code 
				AND lb.repayment_flag = '1' 
				AND lb.bank_top_flag = '1'
			LEFT JOIN jk.t_jk_loan_grant lg 
				ON lg.contract_code = p.contract_code 
			LEFT JOIN jk.t_jk_urge_services_amount usa 
				ON usa.r_grant_id = lg.id
			LEFT JOIN jk.t_jk_payback_month pm 
				ON pm.contract_code = p.contract_code 
				and pm.months = p.payback_current_month
			LEFT JOIN JK.t_gl_jk_product pro 
				on c.product_type = pro.product_code
			LEFT JOIN (select value, label from t_gl_dict where type = 'jk_channel_flag') d
				on d.value = li.loan_flag
		<where>
			p.create_time is not null
			<if test="contractCode != null and contractCode != '' ">
				AND p.contract_code = #{contractCode}
			</if>
			<if test="effectiveFlag != null and !effectiveFlag.equals('')">
				AND p.effective_flag = #{effectiveFlag}
			</if>
			<if test="paybackDayNum != null and paybackDayNum != ''">
				AND p.payback_day = cast(${paybackDayNum} as integer)
			</if>
			<if test="dictPayStatus != null">
				AND p.dict_pay_status in (${dictPayStatus})
			</if>
			<if test="paybackBuleAmount != null">
				AND p.payback_bule_amount > #{paybackBuleAmount}
			</if>
			<if test="paybackDateList != null and paybackDateList.length > 0">
	  			AND to_char(p.payback_day) in 
	  			<foreach item="item" index="index" collection="paybackDateList" open="(" separator="," close=")">
					#{item}
				</foreach>
	  		</if>			
	  		<if test="contract != null and contract.model != null and contract.model != ''">
				AND c.model = #{contract.model}
			</if>
			<if test="customerName != null and customerName != ''">
				AND lc.customer_name like '%' || #{customerName} || '%'
			</if>
			<if test="loanStatus != null and loanStatus != ''">
				AND li.dict_loan_status = #{loanStatus}
			</if>
			<if test="loanFlag != null and loanFlag != ''">
				AND li.loan_flag = #{loanFlag}
			</if>
			<if test="loanInfo != null and loanInfo.dictSourceType != null and !loanInfo.dictSourceType.equals('')">
				AND li.dict_source_type LIKE #{loanInfo.dictSourceType}
			</if>
			<if test="loanInfo != null and loanInfo.loanTeamOrgId != null and !loanInfo.loanTeamOrgId.equals('')">
				AND li.loan_team_orgid = #{loanInfo.loanTeamOrgId}
			</if> 
			<if test="orgList != null and orgList.length > 0">
	  			AND org.id in 
	  			<foreach item="item" index="index" collection="orgList" open="(" separator="," close=")">
					#{item}
				</foreach>
	  		</if>
		</where>
		order by 
			p.create_time DESC
		<if test="limit != null and offset != null">
		    limit #{limit} offset #{offset}
		</if>
	</select>
	
  	<!-- 查询蓝补账号管理列表信息count -->
  	<select id="cnt" resultType="java.lang.Integer">
	select
		count(0) as cnt 
    from
    	(
		SELECT
			p.id as id
		from 
			jk.t_jk_payback p 
			LEFT JOIN jk.t_jk_contract c 
				ON p.contract_code = c.contract_code
			LEFT JOIN jk.t_jk_loan_customer lc 
				ON c.loan_code = lc.loan_code
			LEFT JOIN jk.t_jk_loan_info li 
				ON c.loan_code = li.loan_code
			LEFT JOIN jk.t_jk_loan_bank lb
				ON lb.loan_code = c.loan_code 
				AND lb.repayment_flag = '1' 
				AND lb.bank_top_flag = '1'
			LEFT JOIN jk.t_jk_loan_grant lg 
				ON lg.contract_code = p.contract_code 
			LEFT JOIN jk.t_jk_urge_services_amount usa 
				ON usa.r_grant_id = lg.id
			LEFT JOIN jk.t_gl_org org 
				ON li.loan_store_orgid = org.ID
<!-- 			<if test="(contract != null and contract.model != null and contract.model != '') -->
<!-- 				   or (customerName != null and customerName != '') -->
<!-- 				   or (loanStatus != null and loanStatus != '') -->
<!-- 				   or (loanFlag != null and loanFlag != '') -->
<!-- 				   or (loanInfo != null and loanInfo.dictSourceType != null and loanInfo.dictSourceType != '') -->
<!-- 				   or (loanInfo != null and loanInfo.loanTeamOrgId != null and loanInfo.loanTeamOrgId != '')"> -->
<!-- 				LEFT JOIN jk.t_jk_contract c  -->
<!-- 					ON p.contract_code = c.contract_code -->
<!-- 			</if> -->
<!-- 			<if test="(customerName != null and customerName != '')"> -->
<!-- 				LEFT JOIN jk.t_jk_loan_customer lc  -->
<!-- 					ON c.loan_code = lc.loan_code -->
<!-- 			</if> -->
<!-- 			<if test="(loanStatus != null and loanStatus != '') -->
<!-- 				   or (loanFlag != null and loanFlag != '') -->
<!-- 				   or (loanInfo != null and loanInfo.dictSourceType != null and loanInfo.dictSourceType != '') -->
<!-- 				   or (loanInfo != null and loanInfo.loanTeamOrgId != null and loanInfo.loanTeamOrgId != '')"> -->
<!-- 				LEFT JOIN jk.t_jk_loan_info li  -->
<!-- 					ON c.loan_code = li.loan_code -->
<!-- 			</if> -->
<!-- 			<if test="(orgList != null and orgList.length > 0)"> -->
<!-- 				LEFT JOIN jk.t_gl_org org  -->
<!-- 					ON li.loan_store_orgid = org.ID -->
<!-- 			</if> -->
		<where>
			p.create_time is not null
			<if test="effectiveFlag != null and !effectiveFlag.equals('')">
				AND p.effective_flag = #{effectiveFlag}
			</if>
			<if test="contractCode != null and contractCode != ''">
				AND p.contract_code = #{contractCode}
			</if>
			<if test="paybackDayNum != null and paybackDayNum != ''">
				AND p.payback_day = cast(${paybackDayNum} as integer)
			</if>
			<if test="dictPayStatus != null">
				AND p.dict_pay_status in (${dictPayStatus})
			</if>
			<if test="paybackBuleAmount != null">
				AND p.payback_bule_amount > #{paybackBuleAmount}
			</if>
			<if test="paybackDateList != null and paybackDateList.length > 0">
	  			AND to_char(p.payback_day) in 
	  			<foreach item="item" index="index" collection="paybackDateList" open="(" separator="," close=")">
					#{item}
				</foreach>
	  		</if>			
	  		<if test="contract != null and contract.model != null and contract.model != ''">
				AND c.model = #{contract.model}
			</if>
			<if test="customerName != null and customerName != ''">
				AND lc.customer_name like '%' || #{customerName} || '%'
			</if>
			<if test="loanStatus != null and loanStatus != ''">
				AND li.dict_loan_status = #{loanStatus}
			</if>
			<if test="loanFlag != null and loanFlag != ''">
				AND li.loan_flag = #{loanFlag}
			</if>
			<if test="loanInfo != null and loanInfo.dictSourceType != null and !loanInfo.dictSourceType.equals('')">
				AND li.dict_source_type LIKE #{loanInfo.dictSourceType}
			</if>
			<if test="loanInfo != null and loanInfo.loanTeamOrgId != null and !loanInfo.loanTeamOrgId.equals('')">
				AND li.loan_team_orgid = #{loanInfo.loanTeamOrgId}
			</if> 
			<if test="orgList != null and orgList.length > 0">
	  			AND org.id in 
	  			<foreach item="item" index="index" collection="orgList" open="(" separator="," close=")">
					#{item}
				</foreach>
	  		</if>
		</where>
		) t	 
  	</select> 
	
	
	<select id="findPaybackByCustomer" parameterType="map" resultType="java.lang.String">
	select contract_code from T_JK_PAYBACK a
	where 1=1
	<if test="customerCode != null and customerCode != ''">
		and a.customer_code=#{customerCode,jdbcType=VARCHAR}
	</if>
	<if test="contractCode != null and contractCode != ''">
		and a.contract_code!=#{contractCode,jdbcType=VARCHAR}
	</if>
</select>
	


    <!-- 查询蓝补明细数据 -->
	<select id="selectPaybackBlueAmoun" parameterType="com.creditharmony.loan.borrow.blue.entity.PaybackBlueAmountEx" resultType="com.creditharmony.loan.borrow.blue.entity.PaybackBlueAmountEx">
		SELECT  
			rownum,
			b.id as id,
			b.deal_time as dealTime,
			(select gd.label from t_gl_dict gd where gd.type='jk_trade_type' and gd.value=b.trade_type ) as tradeType,
			b.operator as operator,
			b.dict_deal_use as dictDealUse,
			b.trade_amount as tradeAmount,
			b.surplus_bule_amount as surplusBuleAmount,
			(SELECT to_char(m.month_pay_day,'yyyy-MM-dd') FROM jk.t_jk_payback_month m WHERE m.id = b.r_month_id) as offsetRepaymentDate
<!-- 			p.customer_code as contractCode, -->
<!-- 			lc.customer_name as customerName -->
		FROM 
			jk.T_JK_PAYBACK_BULE_AMONT b 
		left join 
			jk.T_JK_PAYBACK p
		on p.contract_code = b.contract_code
		left join jk.t_jk_contract c on c.contract_code  = p.contract_code
		left join jk.t_jk_loan_customer lc ON c.loan_code = lc.loan_code
		where 
			1=1
			<if test="contractCode != null and contractCode != ''" >
				and p.contract_Code = #{contractCode,jdbcType=VARCHAR}
			</if>
			<!-- <if test="startDate != null and startDate != ''">
				 AND to_char(b.deal_time,'yyyy-mm-dd') &gt;= #{startDate} 
		   </if> -->
		  <!--  <if test="endDate != null and endDate != ''">
				 AND to_char(b.deal_time,'yyyy-mm-dd') &lt;= #{endDate} 
		   </if> -->
		AND b.create_time is not null order by b.order_num DESC<!-- b.deal_time DESC,b.dict_deal_use DESC -->
	</select>
  	<select id="getCustomer" parameterType="com.creditharmony.loan.borrow.blue.entity.PaybackBlue" resultType="Map">
		SELECT 
			p.customer_code as customerCode,
			lc.customer_name as customerName,
			(select p1.payback_bule_amount from T_JK_PAYBACK p1 where p1.contract_Code = #{contractCode,jdbcType=VARCHAR} and p1.effective_flag = #{effectiveFlag}) as surplusBuleAmount
		FROM 
			jk.T_JK_PAYBACK p 
		LEFT JOIN jk.t_jk_loan_customer lc ON p.customer_code = lc.customer_code
		where 
			1=1
			
		<if test="contractCode != null and contractCode != ''" >
			and p.contract_Code = #{contractCode,jdbcType=VARCHAR}
		</if>
	</select>
	
</mapper>