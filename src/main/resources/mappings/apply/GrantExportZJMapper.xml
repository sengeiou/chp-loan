<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.creditharmony.loan.borrow.grant.dao.GrantExportZJDao">
  <resultMap id="GrantExportMap" type="com.creditharmony.loan.borrow.grant.entity.ex.GrantExportZJEx">
    <result property="serialNum" column="serial_num" jdbcType="VARCHAR"/>
    <result property="grantAmount" column="grant_amount" jdbcType="NUMERIC"/>
    <result property="bankCode" column="bank_name" jdbcType="VARCHAR"/>
    <result property="accountType" column="account_type" jdbcType="VARCHAR"/>
    <result property="accountName" column="bank_account_name" jdbcType="VARCHAR"/>
    <result property="accountNumber" column="bank_account" jdbcType="VARCHAR"/>
    <result property="bankBranch" column="bank_branch" jdbcType="VARCHAR"/>
    <result property="provinceCode" column="bank_province" jdbcType="VARCHAR"/>
    <result property="provinceName" column="province_name" jdbcType="VARCHAR"/>
    <result property="cityCode" column="bank_city" jdbcType="VARCHAR"/>
    <result property="cityName" column="city_name" jdbcType="VARCHAR"/>
    <result property="remark" column="remark" jdbcType="VARCHAR"/>
    <result property="certType" column="dict_cert_type" jdbcType="VARCHAR"/>
     
    <result property="identityCode" column="customer_cert_num" jdbcType="VARCHAR"/>
    <result property="telePhone" column="customer_phone_first" jdbcType="VARCHAR"/>
    <result property="email" column="customer_email" jdbcType="VARCHAR"/>
    <result property="contractCode" column="contract_code" jdbcType="VARCHAR"/>
    <result property="productCode" column="product_type" jdbcType="VARCHAR"/>
  </resultMap>
  <select id="findGrantInfo" resultMap="GrantExportMap" parameterType="map">
    select to_char(ROW_NUMBER()  OVER(),'00009') AS serial_num, 
           a.dict_cert_type,
           a.customer_cert_num,
          <!--  a.customer_phone_first,
           a.customer_email , -->
           '放款_' || c.contract_code as remark ,
           b.bank_name,
           b.bank_account_name,
           b.bank_account,
           b.bank_branch,
           b.bank_province,
           p.area_name as province_name,
           b.bank_city,
           c2.area_name as city_name,
           (CASE when c.grant_fail_amount = 0 then c.grant_amount else c.grant_fail_amount end ) as grant_amount,
           round(cf.fee_petition,2) as feePetition,--信访费
           round(cf.fee_urged_service,2) as feeUrgeService,--催收服务费
           round(e.fee_credit,2) as feeCredit, --征信费
           (case when g.product_type = 'A021' then
		   round(cf.fee_petition+cf.fee_urged_service+e.fee_credit,2) else round(fee_urged_service,2) end) as feeSum, --综合费用
           c.contract_code,
           e.product_type   
	from jk.t_jk_loan_customer a 
  	 left join jk.t_jk_loan_bank b on a.loan_code = b.loan_code and b.bank_top_flag = '1' and b.repayment_flag = '0'
   	 left join jk.t_jk_loan_grant c 
   		  on a.loan_code = c.loan_code 
   	 left join jk.t_gl_province_city p 
   		  on p.area_code = b.bank_province 
  	 left join jk.t_gl_province_city c2 
   	      on c2.area_code = b.bank_city 
   	 left join jk.t_jk_loan_info e 
          on e.loan_code = a.loan_code 
     left join jk.t_gl_dict f 
          on f.value = b.bank_name 
     left join jk.t_jk_contract g  
          on g.loan_code = e.loan_code 
     left join jk.t_jk_contract_fee cf
     	  on cf.contract_code = g.contract_code 
 	 where f.type=#{openBank,jdbcType=VARCHAR} and  e.dict_loan_status != '68' 
 	 <if test="lendingWayCode!=null and lendingWayCode!=''">
 	    and c.dict_loan_way = #{lendingWayCode,jdbcType=VARCHAR} 
 	 </if>
 	 <if test="applyIds!=null">
 	     and g.apply_id in 
 	     <foreach item="item" index="index" collection="applyIds" open="(" separator="," close=")">  
            #{item}  
         </foreach>
 	 </if>
  </select>
</mapper>