<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.creditharmony.loan.borrow.applyinfo.dao.ApplyLoanInfoDao">
  <resultMap id="BaseResultMap" type="com.creditharmony.loan.borrow.applyinfo.entity.LoanInfo">
    <result column="loan_code"  property="loanCode" />
    <result column="id"  property="id" />
    <result column="apply_id" property="applyId"/>
    <result column="loan_customer_name"  property="loanCustomerName" />
    <result column="loan_apply_time"  property="loanApplyTime" />
    <result column="loan_months"  property="loanMonths" />
    <result column="loan_apply_amount"  property="loanApplyAmount" />
    <result column="realy_use"  property="realyUse" />
    <result column="loan_store_orgid" property="loanStoreOrgId"/>
    <result column="loan_common_repayment_flag"  property="loanCommonRepaymentFlag" />
    <result column="dict_repay_method"  property="dictRepayMethod" />
    <result column="dict_loan_status"  property="dictLoanStatus" />
    <result column="class_type"  property="dictClassType" />
    <result column="product_type"  property="productType" />
    <result column="loan_urgent_flag"  property="loanUrgentFlag" />
    <result column="loan_dept_type"  property="loanDeptType" />
    <result column="dict_loan_use"  property="dictLoanUse" />
    <result column="loan_apply_top"  property="loanApplyTop" />
    <result column="loan_back_top_status"  property="loanBackTopStatus" />
    <result column="dict_source_type" property="dictSourceType"/>
    <result column="r_id"  property="rid" />
    <result column="dict_is_cycle"  property="dictIsCycle" />
    <result column="dict_is_additional"  property="dictIsAdditional" />
    <result column="customer_into_time"  property="customerIntoTime" />
    <result column="loan_audit_amount" property="loanAuditAmount"/>
    <result column="loan_audit_time"  property="auditTime" />
    <result column="loan_audit_product"  property="auditProduct" />
    <result column="loan_second_finishtime"  property="loanSecondFinishtime" />
    <result column="loan_additional_applyid"  property="loanAdditionalApplyid" />
    <result column="loan_decisionmaking_code" property="loanDecisionMakingCode"/>
    <result column="loan_managercode" property="loanManagerCode"/>
    <result column="loan_team_managercode"  property="loanTeamManagerCode" />
    <result column="loan_team_orgid" property="loanTeamOrgId"/>
    <result column="loan_survey_emp_id"  property="loanSurveyEmpId" />
    <result column="loan_last_apply_id" property="loanLastApplyId" />
    <result column="dict_loana_type"  property="dictLoanaType" />
    <result column="loan_raise_flag"  property="loanRaiseFlag" />
    <result column="loan_raise_amount"  property="loanRaiseAmount" />
    <result column="loan_num"  property="loanNum" />
    <result column="loan_flag"  property="loanFlag" />
    <result column="loan_customer_service"  property="loanCustomerService" />
    <result column="remark"  property="remark" />
    <result column="store_code" property="storeCode"/>
    <result column="frozen_code" property="frozenCode"/>
    <result column="frozen_reason" property="frozenReason"/>
    <result column="frozen_apply_times" property="frozenApplyTimes"/>
    <result column="frozen_last_apply_time" property="frozenLastApplyTime"/>
    <result column="dict_prof_type" property="dictProfType"/>
    <result column="outto_loan_time" property="outtoLoanTime"/>
    <result column="model" property="model"/>
    <result column="dict_loan_use_new_other" property="dictLoanUseNewOther"/>
    <result column="high_payback_month_money" property="highPaybackMonthMoney"/>
    <result column="dict_loan_source" property="dictLoanSource"/>
    <result column="dict_loan_source_other" property="dictLoanSourceOther"/>
    <result column="dict_loan_source_else" property="dictLoanSourceElse"/>
    <result column="dict_loan_source_else_other" property="dictLoanSourceElseOther"/>
    <result column="other_month_income" property="otherMonthIncome"/>
    <result column="other_company_payback_count" property="otherCompanyPaybackCount"/>
    <result column="other_company_payback_totalmoney" property="otherCompanyPaybackTotalmoney"/>
    <result property="loanInfoOldOrNewFlag" column="loaninfo_oldornew_flag"/>
    <result property="loanCustomerSource" column="loan_customer_source"/>
    <result property="deliveryResult" column="DELIVERY_RESULT" /><!--zmq 交割状态 --> 
    <result property="deliveryTime" column="DELIVERY_TIME" /><!--zmq 交割时间 --> 
  </resultMap>
  <sql id="Base_Column_List">
    apply_id,loan_code, id, loan_customer_name, loan_apply_time, loan_months, loan_apply_amount, realy_use,loan_store_orgid, loan_common_repayment_flag, 
    dict_repay_method, dict_loan_status, class_type, product_type, loan_urgent_flag, loan_dept_type, 
    dict_loan_use, loan_apply_top, loan_back_top_status, r_id, dict_is_cycle, dict_is_additional, 
    customer_into_time, loan_audit_time, loan_second_finishtime, loan_additional_applyid,
    loan_decisionmaking_code,loan_managercode,loan_team_managercode,loan_team_orgid,loan_survey_emp_id,
    loan_last_apply_id,dict_source_type,
    dict_loana_type, loan_raise_flag, loan_raise_amount, loan_num, loan_flag, loan_customer_service, 
    remark,store_code,frozen_code,frozen_reason,frozen_apply_times,frozen_last_apply_time,dict_prof_type,
    model,create_by,create_time,modify_by,modify_time,
    dict_loan_use_new_other,
    high_payback_month_money,
    dict_loan_source,
    dict_loan_source_other,
    dict_loan_source_else,
    dict_loan_source_else_other,
    other_month_income,
    other_company_payback_count,
    other_company_payback_totalmoney,
    loan_customer_source,
    loaninfo_oldornew_flag,
    refuse_flag,
    out_flag,
    loaninfo_oldornew_flag,old_loan_code,issplit,zcj,jinxin,fl_flag,time_out
  </sql>
 <select id="selectByLoanCode" parameterType="map" resultMap="BaseResultMap">
     select 
       <include refid="Base_Column_List"/> 
     from jk.t_jk_loan_info 
     where 1=1 and loan_code=#{loanCode,jdbcType=VARCHAR}
 </select>
 <select id="selectByApplyId" parameterType="map" resultMap="BaseResultMap">
     select 
       <include refid="Base_Column_List"/> 
       
     from jk.t_jk_loan_info 
     where 1=1 and apply_id=#{applyId,jdbcType=VARCHAR}
 </select>
 <select id="selectByConsultId" parameterType="map" resultMap="BaseResultMap">
     select 
        <include refid="Base_Column_List"/> 
     from jk.t_jk_loan_info 
     where r_id = #{consultId,jdbcType=VARCHAR} 
 </select>
  <insert id="insertLoanInfo" parameterType="com.creditharmony.loan.borrow.applyinfo.entity.LoanInfo">
    insert into jk.t_jk_loan_info (loan_code, id,apply_id,loan_apply_time, 
      loan_months, loan_apply_amount,loan_customer_name,realy_use,loan_store_orgid, 
      loan_common_repayment_flag, dict_repay_method, dict_loan_status, 
      class_type, product_type, loan_urgent_flag, 
      loan_dept_type, dict_loan_use, loan_apply_top, 
      loan_back_top_status, r_id, dict_is_cycle, 
      dict_is_additional, customer_into_time, loan_audit_time,loan_audit_product, 
      loan_second_finishtime, loan_additional_applyid,
      loan_managercode,dict_source_type, 
      loan_team_managercode, loan_team_orgid, 
      loan_survey_emp_id, loan_last_apply_id, dict_loana_type, 
      loan_raise_flag, loan_raise_amount, loan_num, 
      loan_flag, loan_customer_service, remark,store_code,frozen_code,frozen_reason,
      frozen_apply_times,frozen_last_apply_time,dict_prof_type,model,
      create_by, create_time, modify_by, 
      modify_time,loaninfo_oldornew_flag,
      dict_loan_use_new_other,
      high_payback_month_money,
      dict_loan_source,
      dict_loan_source_other,
      dict_loan_source_else,
      dict_loan_source_else_other,
      other_month_income,
      other_company_payback_count,
      other_company_payback_totalmoney
      )
      values (#{loanCode,jdbcType=VARCHAR}, #{id,jdbcType=VARCHAR},#{applyId,jdbcType=VARCHAR}, #{loanApplyTime,jdbcType=TIMESTAMP}, 
      #{loanMonths,jdbcType=INTEGER}, #{loanApplyAmount,jdbcType=NUMERIC},#{loanCustomerName,jdbcType=VARCHAR}, #{realyUse,jdbcType=VARCHAR},#{loanStoreOrgId,jdbcType=VARCHAR}, 
      #{loanCommonRepaymentFlag,jdbcType=VARCHAR}, #{dictRepayMethod,jdbcType=VARCHAR}, #{dictLoanStatus,jdbcType=VARCHAR}, 
      #{dictClassType,jdbcType=VARCHAR}, #{productType,jdbcType=VARCHAR}, #{loanUrgentFlag,jdbcType=VARCHAR}, 
      #{loanDeptType,jdbcType=VARCHAR}, #{dictLoanUse,jdbcType=VARCHAR}, #{loanApplyTop,jdbcType=VARCHAR}, 
      #{loanBackTopStatus,jdbcType=VARCHAR}, #{rid,jdbcType=VARCHAR}, #{dictIsCycle,jdbcType=VARCHAR}, 
      #{dictIsAdditional,jdbcType=VARCHAR}, #{customerIntoTime,jdbcType=TIMESTAMP}, #{auditTime,jdbcType=TIMESTAMP}, 
      #{auditProduct,jdbcType=VARCHAR},#{loanSecondFinishtime,jdbcType=TIMESTAMP}, #{loanAdditionalApplyid,jdbcType=NUMERIC}, 
      #{loanManagerCode,jdbcType=VARCHAR},#{dictSourceType,jdbcType=VARCHAR},#{loanTeamManagerCode,jdbcType=VARCHAR}, #{loanTeamOrgId,jdbcType=VARCHAR}, 
      #{loanSurveyEmpId,jdbcType=VARCHAR}, #{loanLastApplyId,jdbcType=VARCHAR}, #{dictLoanaType,jdbcType=VARCHAR}, 
      #{loanRaiseFlag,jdbcType=VARCHAR}, #{loanRaiseAmount,jdbcType=NUMERIC}, #{loanNum,jdbcType=NUMERIC}, 
      #{loanFlag,jdbcType=VARCHAR}, #{loanCustomerService,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{storeCode,jdbcType=VARCHAR},#{frozenCode,jdbcType=VARCHAR},#{frozenReason,jdbcType=VARCHAR},
      #{frozenApplyTimes,jdbcType=INTEGER},#{frozenLastApplyTime,jdbcType=TIMESTAMP},#{dictProfType,jdbcType=VARCHAR},
      #{model,jdbcType=VARCHAR},#{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{modifyBy,jdbcType=VARCHAR},#{modifyTime,jdbcType=TIMESTAMP},#{loanInfoOldOrNewFlag,jdbcType=VARCHAR},
      #{dictLoanUseNewOther,jdbcType=VARCHAR},
      #{highPaybackMonthMoney,jdbcType=NUMERIC},
      #{dictLoanSource,jdbcType=VARCHAR},
      #{dictLoanSourceOther,jdbcType=VARCHAR},
      #{dictLoanSourceElse,jdbcType=VARCHAR},
      #{dictLoanSourceElseOther,jdbcType=VARCHAR},
      #{otherMonthIncome,jdbcType=NUMERIC},
      #{otherCompanyPaybackCount,jdbcType=VARCHAR},
      #{otherCompanyPaybackTotalmoney,jdbcType=NUMERIC}
      )
  </insert>
  <update id="updateApplyId" parameterType="map">
     update jk.t_jk_loan_info
     set apply_id = #{applyId,jdbcType=VARCHAR}       
     where loan_code = #{loanCode,jdbcType=VARCHAR}
  </update>
  <update id="updateApplyIdAndStatus" parameterType="map">
     update jk.t_jk_loan_info
     set apply_id = #{applyId,jdbcType=VARCHAR},
    	 loan_num = #{loanNum,jdbcType=INTEGER},
         dict_loana_type=#{dictLoanType,jdbcType=VARCHAR},
         dict_loan_status = #{dictLoanStatus,jdbcType=VARCHAR}     
     where loan_code = #{loanCode,jdbcType=VARCHAR}
  </update>
  <update id="updateApplyIdByOldApplyId" parameterType="map">
    update jk.t_jk_loan_info 
     set apply_id = #{applyId,jdbcType=VARCHAR} 
     where apply_id = #{oldApplyId,jdbcType=VARCHAR} 
  </update>
  <update id="updateLoanInfo">
     update jk.t_jk_loan_info
    <set>
      <if test="id != null and id!=''">
        id = #{id,jdbcType=VARCHAR},
      </if>
      <!-- 电销组织机构编码 -->
       <if test="consTelesalesOrgcode!=null and consTelesalesOrgcode!=''">
       cons_telesales_orgcode = #{consTelesalesOrgcode,jdbcType=VARCHAR},
      </if>
      
      <if test="loanCustomerName!=null and loanCustomerName!=''">
       loan_customer_name = #{loanCustomerName,jdbcType=VARCHAR},
      </if>
      <if test="loanApplyTime != null">
        loan_apply_time = #{loanApplyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loanMonths != null">
        loan_months = #{loanMonths,jdbcType=INTEGER},
      </if>
      <if test="loanApplyAmount != null">
        loan_apply_amount = #{loanApplyAmount,jdbcType=NUMERIC},
      </if>
      <if test="realyUse != null and realyUse !=''">
        realy_use = #{realyUse,jdbcType=VARCHAR},
      </if>
      <if test="loanStoreOrgId!=null and loanStoreOrgId!=''">
        loan_store_orgid = #{loanStoreOrgId,jdbcType=VARCHAR},
      </if>
      <if test="loanCommonRepaymentFlag != null and loanCommonRepaymentFlag!=''">
        loan_common_repayment_flag = #{loanCommonRepaymentFlag,jdbcType=VARCHAR},
      </if>
      <if test="dictRepayMethod != null and dictRepayMethod!=''">
        dict_repay_method = #{dictRepayMethod,jdbcType=VARCHAR},
      </if>
      <if test="dictLoanStatus != null and dictLoanStatus!=''">
        dict_loan_status = #{dictLoanStatus,jdbcType=VARCHAR},
      </if>
      <if test="dictClassType != null and dictClassType!=''">
        class_type = #{dictClassType,jdbcType=VARCHAR},
      </if>
      <if test="productType != null and productType!=''">
        product_type = #{productType,jdbcType=VARCHAR},
      </if>
      <if test="loanUrgentFlag != null and loanUrgentFlag!=''">
        loan_urgent_flag = #{loanUrgentFlag,jdbcType=VARCHAR},
      </if>
      <if test="loanDeptType != null and loanDeptType!=''">
        loan_dept_type = #{loanDeptType,jdbcType=VARCHAR},
      </if>
      <if test="dictLoanUse != null and dictLoanUse!=''">
        dict_loan_use = #{dictLoanUse,jdbcType=VARCHAR},
      </if>
      <if test="loanApplyTop != null and loanApplyTop!=''">
        loan_apply_top = #{loanApplyTop,jdbcType=VARCHAR},
      </if>
      <if test="loanBackTopStatus != null and loanBackTopStatus!=''">
        loan_back_top_status = #{loanBackTopStatus,jdbcType=VARCHAR},
      </if>
      <if test="rid != null and rid!=''">
        r_id = #{rid,jdbcType=VARCHAR},
      </if>
      <if test="dictIsCycle != null and dictIsCycle!=''">
        dict_is_cycle = #{dictIsCycle,jdbcType=VARCHAR},
      </if>
      <if test="dictIsAdditional != null and dictIsAdditional!=''">
        dict_is_additional = #{dictIsAdditional,jdbcType=VARCHAR},
      </if>
      <if test="customerIntoTime != null">
        customer_into_time = #{customerIntoTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditTime != null">
        loan_audit_time = #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditProduct!=null and auditProduct!=''">
       loan_audit_product=#{auditProduct,jdbcType=VARCHAR},
      </if>
      <if test="loanSecondFinishtime != null">
        loan_second_finishtime = #{loanSecondFinishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="loanAdditionalApplyid != null and loanAdditionalApplyid!=''">
        loan_additional_applyid = #{loanAdditionalApplyid,jdbcType=VARCHAR},
      </if>
      <if test="loanManagerCode!=null and loanManagerCode!=''">
        loan_managercode = #{loanManagerCode,jdbcType=VARCHAR},
      </if>
      <if test="loanTeamManagerCode != null and loanTeamManagerCode!=''">
        loan_team_managercode = #{loanTeamManagerCode,jdbcType=VARCHAR},
      </if>
      <if test="loanTeamOrgId != null and loanTeamOrgId!=''">
        loan_team_orgid = #{loanTeamOrgId,jdbcType=VARCHAR},
      </if>
      <if test="loanSurveyEmpId != null and loanSurveyEmpId!=''">
        loan_survey_emp_id = #{loanSurveyEmpId,jdbcType=VARCHAR},
      </if>
      <if test="loanLastApplyId != null">
        loan_last_apply_id = #{loanLastApplyId,jdbcType=VARCHAR},
      </if>
      <if test="dictLoanaType != null and dictLoanaType!=''">
        dict_loana_type = #{dictLoanaType,jdbcType=VARCHAR},
      </if>
      <if test="loanRaiseFlag != null and loanRaiseFlag!=''">
        loan_raise_flag = #{loanRaiseFlag,jdbcType=VARCHAR},
      </if>
      <if test="loanRaiseAmount != null">
        loan_raise_amount = #{loanRaiseAmount,jdbcType=NUMERIC},
      </if>
      <if test="loanNum != null">
        loan_num = #{loanNum,jdbcType=INTEGER},
      </if>
      <if test="loanFlag != null">
        loan_flag= #{loanFlag,jdbcType=VARCHAR},
      </if>
      <if test="loanCustomerService != null and loanCustomerService != ''">
        loan_customer_service = #{loanCustomerService,jdbcType=VARCHAR},
      </if>
      <if test="remark != null and remark != ''">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="dictSourceType!=null and dictSourceType!=''">
        dict_source_type = #{dictSourceType,jdbcType=VARCHAR},
      </if>
      <if test="storeCode!=null and storeCode!=''">
        store_code = #{storeCode,jdbcType=VARCHAR},
      </if>
      <if test="frozenCode!=null">
        frozen_code = #{frozenCode,jdbcType=VARCHAR},
      </if>
      <if test="frozenReason!=null">
        frozen_reason = #{frozenReason,jdbcType=VARCHAR},
      </if>
      <if test="frozenApplyTimes!=null">
        frozen_apply_times = #{frozenApplyTimes,jdbcType=INTEGER},
      </if>
      <if test="frozenLastApplyTime!=null">
        frozen_last_apply_time = #{frozenLastApplyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dictProfType!=null and dictProfType!=''">
          dict_prof_type = #{dictProfType,jdbcType=VARCHAR},
      </if>
      <if test="model!=null and model!=''">
          model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null and createBy != ''">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyBy != null and modifyBy!=''">
        modify_by = #{modifyBy,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dictLoanUseNewOther != null">
        dict_loan_use_new_other = #{dictLoanUseNewOther,jdbcType=VARCHAR},
      </if>
      <if test="highPaybackMonthMoney != null">
        high_payback_month_money = #{highPaybackMonthMoney,jdbcType=NUMERIC},
      </if>
      <if test="dictLoanSource != null and dictLoanSource!=''">
        dict_loan_source = #{dictLoanSource,jdbcType=VARCHAR},
      </if>
      <if test="dictLoanSourceOther != null">
        dict_loan_source_other = #{dictLoanSourceOther,jdbcType=VARCHAR},
      </if>
      <if test="dictLoanSourceElse != null">
        dict_loan_source_else = #{dictLoanSourceElse,jdbcType=VARCHAR},
      </if>
      <if test="dictLoanSourceElseOther != null">
        dict_loan_source_else_other = #{dictLoanSourceElseOther,jdbcType=VARCHAR},
      </if>
      <if test="otherMonthIncome != null">
        other_month_income = #{otherMonthIncome,jdbcType=NUMERIC},
      </if>
      <if test="otherCompanyPaybackCount != null">
        other_company_payback_count = #{otherCompanyPaybackCount,jdbcType=VARCHAR},
      </if>
      <if test="otherCompanyPaybackTotalmoney != null">
        other_company_payback_totalmoney = #{otherCompanyPaybackTotalmoney,jdbcType=NUMERIC},
      </if>
       <if test="nodeFlag != null">
        node_flag = #{nodeFlag,jdbcType=VARCHAR},
      </if>
      <if test="loanCustomerSource != null">
      	loan_customer_source = #{loanCustomerSource,jdbcType=VARCHAR},
      </if>
      <if test="oldLoanCode != null">
        old_loan_code = #{oldLoanCode,jdbcType=VARCHAR},
      </if>
      <if test="issplit != null">
        issplit = #{issplit,jdbcType=VARCHAR},
      </if>
       <if test="zcj != null">
        zcj = #{zcj,jdbcType=VARCHAR},
      </if>
      <if test="jinxin != null">
        jinxin = #{jinxin,jdbcType=VARCHAR},
      </if>
        <if test="timeOut != null">
        time_out = #{timeOut,jdbcType=VARCHAR},
      </if>
      <if test="flFlag != null">
        fl_flag = #{flFlag,jdbcType=VARCHAR},
      </if>
      <if test="frozenFlag != null">
      	frozen_flag = #{frozenFlag,jdbcType=VARCHAR},
      </if>
      <if test="orderField != null">
      	order_field = #{orderField,jdbcType=VARCHAR},
      </if>
      <if test="kingStatus != null and kingStatus != ''">
      	king_status = #{kingStatus,jdbcType=VARCHAR},
      </if>
      <if test="kingOpenRespReason != null">
      	king_open_resp_reason = #{kingOpenRespReason,jdbcType=VARCHAR},
      </if>
      <if test="kingProctolRespReason != null and kingProctolRespReason != ''">
      	king_proctol_resp_reason = #{kingProctolRespReason,jdbcType=VARCHAR},
      </if>
      <if test="emergencyStatus != null and emergencyStatus != ''">
      	emergency_status = #{emergencyStatus,jdbcType=VARCHAR},
      </if>
      <if test="blackType != null and blackType != ''">
      	black_type = #{blackType,jdbcType=VARCHAR},
      </if>
      <if test="yesOrNoEmergency != null and yesOrNoEmergency != ''">
      	yesorno_emergency = #{yesOrNoEmergency},
      </if>
      <if test="feeCredit != null">
        fee_credit = #{feeCredit,jdbcType=NUMERIC},
      </if>
    </set>
       where loan_code = #{loanCode,jdbcType=VARCHAR}
  </update>
  <update id="updateLoanStatus" parameterType="map">
     update jk.t_jk_loan_info set  
      dict_loan_status = #{dictLoanStatus,jdbcType=VARCHAR} 
      <if test="modifyBy!=null and modifyBy!=''">
        ,modify_by = #{modifyBy,jdbcType=VARCHAR} 
      </if>
      <if test="modifyTime!=null">
        ,modify_time = #{modifyTime,jdbcType=TIMESTAMP} 
      </if>
      <if test="visitFlag!=null and visitFlag!=''">
        ,visit_flag = #{visitFlag,jdbcType=VARCHAR}
      </if>
      <if test="refuse_flag !=null and refuse_flag !=''">
        ,refuse_flag = #{refuse_flag,jdbcType=VARCHAR}
      </if>
      <if test="out_flag !=null and out_flag !=''">
        ,out_flag = #{out_flag,jdbcType=VARCHAR}
      </if>
     where 
      <trim prefixOverrides="AND | OR">
		<if test="loanCode!=null and loanCode!=''">
			and loan_code = #{loanCode,jdbcType=VARCHAR}
		</if>
		<if test="applyId!=null and loanCode!=''">
			and apply_id = #{applyId,jdbcType=VARCHAR}
		</if>
		<if test="rId!=null and rId!=''">
			and r_id = #{rId,jdbcType=VARCHAR}
		</if>
	</trim>
  </update>
  <update id="updateOuttoLoanTime" parameterType="map">
  		update jk.t_jk_loan_info set
  		outto_loan_time = #{outtoLoanTime,jdbcType=TIMESTAMP}
  		where 
	<trim prefixOverrides="AND | OR">  
     	<if test="loanCode!=null and loanCode!=''">
       		and loan_code = #{loanCode,jdbcType=VARCHAR}
     	</if>
      	<if test="applyId!=null and applyId!=''">
       		and apply_id = #{applyId,jdbcType=VARCHAR}
     	</if>
     </trim>
  </update>
  <insert id="insert">
    insert into jk.t_jk_loan_info (loan_code, id,apply_id,loan_apply_time, 
      loan_months, loan_apply_amount,loan_customer_name,realy_use,loan_store_orgid, 
      loan_common_repayment_flag, dict_repay_method, dict_loan_status, 
      class_type, product_type, loan_urgent_flag, 
      loan_dept_type, dict_loan_use, loan_apply_top, 
      loan_back_top_status, r_id, dict_is_cycle, 
      dict_is_additional, customer_into_time, loan_audit_time,loan_audit_product, 
      loan_second_finishtime, loan_additional_applyid,
      loan_managercode,dict_source_type, 
      loan_team_managercode, loan_team_orgid, 
      loan_survey_emp_id, loan_last_apply_id, dict_loana_type, 
      loan_raise_flag, loan_raise_amount, loan_num, 
      loan_flag, loan_customer_service, remark,store_code,frozen_code,frozen_reason,
      frozen_apply_times,frozen_last_apply_time,dict_prof_type,model,
      create_by, create_time, modify_by, 
      modify_time,loaninfo_oldornew_flag,
      dict_loan_use_new_other,
      high_payback_month_money,
      dict_loan_source,
      dict_loan_source_other,
      dict_loan_source_else,
      dict_loan_source_else_other,
      other_month_income,
      other_company_payback_count,
      other_company_payback_totalmoney
      )
      values (#{loanCode,jdbcType=VARCHAR}, #{id,jdbcType=VARCHAR},#{applyId,jdbcType=VARCHAR}, #{loanApplyTime,jdbcType=TIMESTAMP}, 
      #{loanMonths,jdbcType=INTEGER}, #{loanApplyAmount,jdbcType=NUMERIC},#{loanCustomerName,jdbcType=VARCHAR}, #{realyUse,jdbcType=VARCHAR},#{loanStoreOrgId,jdbcType=VARCHAR}, 
      #{loanCommonRepaymentFlag,jdbcType=VARCHAR}, #{dictRepayMethod,jdbcType=VARCHAR}, #{dictLoanStatus,jdbcType=VARCHAR}, 
      #{dictClassType,jdbcType=VARCHAR}, #{productType,jdbcType=VARCHAR}, #{loanUrgentFlag,jdbcType=VARCHAR}, 
      #{loanDeptType,jdbcType=VARCHAR}, #{dictLoanUse,jdbcType=VARCHAR}, #{loanApplyTop,jdbcType=VARCHAR}, 
      #{loanBackTopStatus,jdbcType=VARCHAR}, #{rid,jdbcType=VARCHAR}, #{dictIsCycle,jdbcType=VARCHAR}, 
      #{dictIsAdditional,jdbcType=VARCHAR}, #{customerIntoTime,jdbcType=TIMESTAMP}, #{auditTime,jdbcType=TIMESTAMP}, 
      #{auditProduct,jdbcType=VARCHAR},#{loanSecondFinishtime,jdbcType=TIMESTAMP}, #{loanAdditionalApplyid,jdbcType=NUMERIC}, 
      #{loanManagerCode,jdbcType=VARCHAR},#{dictSourceType,jdbcType=VARCHAR},#{loanTeamManagerCode,jdbcType=VARCHAR}, #{loanTeamOrgId,jdbcType=VARCHAR}, 
      #{loanSurveyEmpId,jdbcType=VARCHAR}, #{loanLastApplyId,jdbcType=VARCHAR}, #{dictLoanaType,jdbcType=VARCHAR}, 
      #{loanRaiseFlag,jdbcType=VARCHAR}, #{loanRaiseAmount,jdbcType=NUMERIC}, #{loanNum,jdbcType=NUMERIC}, 
      #{loanFlag,jdbcType=VARCHAR}, #{loanCustomerService,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{storeCode,jdbcType=VARCHAR},#{frozenCode,jdbcType=VARCHAR},#{frozenReason,jdbcType=VARCHAR},
      #{frozenApplyTimes,jdbcType=INTEGER},#{frozenLastApplyTime,jdbcType=TIMESTAMP},#{dictProfType,jdbcType=VARCHAR},
      #{model,jdbcType=VARCHAR},#{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{modifyBy,jdbcType=VARCHAR},#{modifyTime,jdbcType=TIMESTAMP},#{loanInfoOldOrNewFlag,jdbcType=VARCHAR},
      #{dictLoanUseNewOther,jdbcType=VARCHAR},
      #{highPaybackMonthMoney,jdbcType=NUMERIC},
      #{dictLoanSource,jdbcType=VARCHAR},
      #{dictLoanSourceOther,jdbcType=VARCHAR},
      #{dictLoanSourceElse,jdbcType=VARCHAR},
      #{dictLoanSourceElseOther,jdbcType=VARCHAR},
      #{otherMonthIncome,jdbcType=NUMERIC},
      #{otherCompanyPaybackCount,jdbcType=VARCHAR},
      #{otherCompanyPaybackTotalmoney,jdbcType=NUMERIC}
      )
  </insert>
  <update id="update">
     update jk.t_jk_loan_info
    <set>
      <if test="id != null and id!=''">
        id = #{id,jdbcType=VARCHAR},
      </if>
      <!-- 电销组织机构编码 -->
       <if test="consTelesalesOrgcode!=null and consTelesalesOrgcode!=''">
       cons_telesales_orgcode = #{consTelesalesOrgcode,jdbcType=VARCHAR},
      </if>
      
      <if test="loanCustomerName!=null and loanCustomerName!=''">
       loan_customer_name = #{loanCustomerName,jdbcType=VARCHAR},
      </if>
      <if test="loanApplyTime != null">
        loan_apply_time = #{loanApplyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loanMonths != null">
        loan_months = #{loanMonths,jdbcType=INTEGER},
      </if>
      <if test="loanApplyAmount != null">
        loan_apply_amount = #{loanApplyAmount,jdbcType=NUMERIC},
      </if>
      <if test="realyUse != null and realyUse !=''">
        realy_use = #{realyUse,jdbcType=VARCHAR},
      </if>
      <if test="loanStoreOrgId!=null and loanStoreOrgId!=''">
        loan_store_orgid = #{loanStoreOrgId,jdbcType=VARCHAR},
      </if>
      <if test="loanCommonRepaymentFlag != null and loanCommonRepaymentFlag!=''">
        loan_common_repayment_flag = #{loanCommonRepaymentFlag,jdbcType=VARCHAR},
      </if>
      <if test="dictRepayMethod != null and dictRepayMethod!=''">
        dict_repay_method = #{dictRepayMethod,jdbcType=VARCHAR},
      </if>
      <if test="dictLoanStatus != null and dictLoanStatus!=''">
        dict_loan_status = #{dictLoanStatus,jdbcType=VARCHAR},
      </if>
      <if test="dictClassType != null and dictClassType!=''">
        class_type = #{dictClassType,jdbcType=VARCHAR},
      </if>
      <if test="productType != null and productType!=''">
        product_type = #{productType,jdbcType=VARCHAR},
      </if>
      <if test="loanUrgentFlag != null and loanUrgentFlag!=''">
        loan_urgent_flag = #{loanUrgentFlag,jdbcType=VARCHAR},
      </if>
      <if test="loanDeptType != null and loanDeptType!=''">
        loan_dept_type = #{loanDeptType,jdbcType=VARCHAR},
      </if>
      <if test="dictLoanUse != null and dictLoanUse!=''">
        dict_loan_use = #{dictLoanUse,jdbcType=VARCHAR},
      </if>
      <if test="loanApplyTop != null and loanApplyTop!=''">
        loan_apply_top = #{loanApplyTop,jdbcType=VARCHAR},
      </if>
      <if test="loanBackTopStatus != null and loanBackTopStatus!=''">
        loan_back_top_status = #{loanBackTopStatus,jdbcType=VARCHAR},
      </if>
      <if test="rid != null and rid!=''">
        r_id = #{rid,jdbcType=VARCHAR},
      </if>
      <if test="dictIsCycle != null and dictIsCycle!=''">
        dict_is_cycle = #{dictIsCycle,jdbcType=VARCHAR},
      </if>
      <if test="dictIsAdditional != null and dictIsAdditional!=''">
        dict_is_additional = #{dictIsAdditional,jdbcType=VARCHAR},
      </if>
      <if test="customerIntoTime != null">
        customer_into_time = #{customerIntoTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditTime != null">
        loan_audit_time = #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditProduct!=null and auditProduct!=''">
       loan_audit_product=#{auditProduct,jdbcType=VARCHAR},
      </if>
      <if test="loanSecondFinishtime != null">
        loan_second_finishtime = #{loanSecondFinishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="loanAdditionalApplyid != null and loanAdditionalApplyid!=''">
        loan_additional_applyid = #{loanAdditionalApplyid,jdbcType=VARCHAR},
      </if>
      <if test="loanManagerCode!=null and loanManagerCode!=''">
        loan_managercode = #{loanManagerCode,jdbcType=VARCHAR},
      </if>
      <if test="loanTeamManagerCode != null and loanTeamManagerCode!=''">
        loan_team_managercode = #{loanTeamManagerCode,jdbcType=VARCHAR},
      </if>
      <if test="loanTeamOrgId != null and loanTeamOrgId!=''">
        loan_team_orgid = #{loanTeamOrgId,jdbcType=VARCHAR},
      </if>
      <if test="loanSurveyEmpId != null and loanSurveyEmpId!=''">
        loan_survey_emp_id = #{loanSurveyEmpId,jdbcType=VARCHAR},
      </if>
      <if test="loanLastApplyId != null">
        loan_last_apply_id = #{loanLastApplyId,jdbcType=VARCHAR},
      </if>
      <if test="dictLoanaType != null and dictLoanaType!=''">
        dict_loana_type = #{dictLoanaType,jdbcType=VARCHAR},
      </if>
      <if test="loanRaiseFlag != null and loanRaiseFlag!=''">
        loan_raise_flag = #{loanRaiseFlag,jdbcType=VARCHAR},
      </if>
      <if test="loanRaiseAmount != null">
        loan_raise_amount = #{loanRaiseAmount,jdbcType=NUMERIC},
      </if>
      <if test="loanNum != null">
        loan_num = #{loanNum,jdbcType=INTEGER},
      </if>
      <if test="loanFlag != null">
        loan_flag= #{loanFlag,jdbcType=VARCHAR},
      </if>
      <if test="loanCustomerService != null and loanCustomerService != ''">
        loan_customer_service = #{loanCustomerService,jdbcType=VARCHAR},
      </if>
      <if test="remark != null and remark != ''">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="dictSourceType!=null and dictSourceType!=''">
        dict_source_type = #{dictSourceType,jdbcType=VARCHAR},
      </if>
      <if test="storeCode!=null and storeCode!=''">
        store_code = #{storeCode,jdbcType=VARCHAR},
      </if>
      <if test="frozenCode!=null">
        frozen_code = #{frozenCode,jdbcType=VARCHAR},
      </if>
      <if test="frozenFlag!=null">
        frozen_flag = #{frozenFlag,jdbcType=VARCHAR},
      </if>
      <if test="frozenReason!=null">
        frozen_reason = #{frozenReason,jdbcType=VARCHAR},
      </if>
      <if test="frozenApplyTimes!=null">
        frozen_apply_times = #{frozenApplyTimes,jdbcType=INTEGER},
      </if>
      <if test="frozenLastApplyTime!=null">
        frozen_last_apply_time = #{frozenLastApplyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dictProfType!=null and dictProfType!=''">
          dict_prof_type = #{dictProfType,jdbcType=VARCHAR},
      </if>
      <if test="model!=null and model!=''">
          model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null and createBy != ''">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyBy != null and modifyBy!=''">
        modify_by = #{modifyBy,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dictLoanUseNewOther != null">
        dict_loan_use_new_other = #{dictLoanUseNewOther,jdbcType=VARCHAR},
      </if>
      <if test="highPaybackMonthMoney != null">
        high_payback_month_money = #{highPaybackMonthMoney,jdbcType=NUMERIC},
      </if>
      <if test="dictLoanSource != null and dictLoanSource!=''">
        dict_loan_source = #{dictLoanSource,jdbcType=VARCHAR},
      </if>
      <if test="dictLoanSourceOther != null">
        dict_loan_source_other = #{dictLoanSourceOther,jdbcType=VARCHAR},
      </if>
      <if test="dictLoanSourceElse != null">
        dict_loan_source_else = #{dictLoanSourceElse,jdbcType=VARCHAR},
      </if>
      <if test="dictLoanSourceElseOther != null">
        dict_loan_source_else_other = #{dictLoanSourceElseOther,jdbcType=VARCHAR},
      </if>
      <if test="otherMonthIncome != null">
        other_month_income = #{otherMonthIncome,jdbcType=NUMERIC},
      </if>
      <if test="otherCompanyPaybackCount != null">
        other_company_payback_count = #{otherCompanyPaybackCount,jdbcType=VARCHAR},
      </if>
      <if test="otherCompanyPaybackTotalmoney != null">
        other_company_payback_totalmoney = #{otherCompanyPaybackTotalmoney,jdbcType=NUMERIC},
      </if>
      <if test="loanCustomerSource != null">
      	loan_customer_source = #{loanCustomerSource,jdbcType=VARCHAR}
      </if>
    </set>
       where loan_code = #{loanCode,jdbcType=VARCHAR}
  </update>
  <select id="selectByCustomerCode" resultMap="BaseResultMap" parameterType="string">
       select d.* from 
              (
                 select 
                      a.customer_code,
                      max(a.cons_communicate_date) cons_communicate_date 
                 from t_jk_customer_consultation a 
                 where a.customer_code=#{customerCode,jdbcType=VARCHAR}
                 group by a.customer_code
               ) b 
            left join  
                 t_jk_customer_consultation c 
                on c.customer_code = b.customer_code 
            and c.cons_communicate_date = b.cons_communicate_date 
            and c.customer_code=#{customerCode,jdbcType=VARCHAR}
            left join jk.t_jk_loan_info d
                on c.id = d.r_id 
            where d.id is not null 
  </select>
  <select id="selectByIDNum" parameterType="map" resultMap="BaseResultMap">
  select a.* from jk.t_jk_loan_info a 
 left join 
    (select * 
      from  jk.t_jk_loan_customer 
     where customer_cert_num =#{mateCertNum,jdbcType=VARCHAR} and dict_cert_type=#{certType,jdbcType=VARCHAR}) b on a.loan_code = b.loan_code 
 left join 
     (select * 
       from jk.t_jk_loan_coborrower 
      where cobo_cert_num =#{mateCertNum,jdbcType=VARCHAR} and dict_cert_type=#{certType,jdbcType=VARCHAR} ) c on a.loan_code = c.loan_code 
 left join 
     (select * 
       from jk.t_jk_loan_mate 
      where mate_cert_num =#{mateCertNum,jdbcType=VARCHAR} and dict_cert_type=#{certType,jdbcType=VARCHAR} ) d on d.loan_code = a.loan_code  
  order by a.create_time desc limit 1
  </select>
  <select id="findByIdentityCode" parameterType="map" resultMap="BaseResultMap">
     select a.* from jk.t_jk_loan_info a left join jk.t_jk_loan_customer b on a.loan_code = b.loan_code 
      where b.customer_cert_num = #{mateCertNum,jdbcType=VARCHAR} 
            and b.dict_cert_type = #{certType,jdbcType=VARCHAR} order by b.create_time desc limit 1
  </select>
  
  <select id="findLoanLinkedContract" parameterType="map" resultMap="BaseResultMap">
    select a.* from jk.t_jk_loan_info a 
     left join jk.t_jk_contract b  on a.loan_code = b.loan_code 
    where 
    <trim prefixOverrides="AND | OR"> 
	<if test="contractCode!=null and contractCode!=''"> 
	and contract_code = #{contractCode,jdbcType=VARCHAR} 
	</if> 
	<if test="applyId!=null and applyId!=''"> 
	and b.apply_id = #{applyId,jdbcType=VARCHAR} 
	</if> 
	</trim> 
  </select> 
  
  <!-- sjw  根据loanCode查找借款状态 -->  
  <select id="findStatusByLoanCode" parameterType="String" resultMap="BaseResultMap">
     select 
     <include refid="Base_Column_List"/>
      from jk.t_jk_loan_info where loan_code = #{loanCode}
  </select>
  
	<!-- 获取借款信息 -->
	<select id="getByLoanCode" parameterType="String" resultType="com.creditharmony.loan.borrow.applyinfo.entity.LoanInfo">
		select 
			*
		from
			jk.t_jk_loan_info
		where loan_code = #{loanCode}
	</select>
	
		<!-- 获取借款信息 -->
	<select id="getCustomerIntoTimeByLoanCode" parameterType="String" resultType="String">
		select 
			(customer_into_time)::varchar
		from
			jk.t_jk_loan_info
		where loan_code = #{loanCode}
	</select>
	<update id="updOrderField" parameterType="Map">
	    update jk.t_jk_loan_info set order_field = #{orderField,jdbcType=VARCHAR} 
	     where loan_code = #{loanCode,jdbcType=VARCHAR} 
	</update>
	
	<select id="getStatus" parameterType="String" resultType="Map">
		select 
			dict_loan_status as loanstatus
		from
			jk.t_jk_loan_info
		where apply_id = #{applyId}
	</select>
	
	<update id="updateRecommend" parameterType="map">
     update jk.t_jk_loan_grant
     set submissiondate = #{recommendTime},
    	 grant_pch = #{batch}  
     where loan_code = #{loanCode,jdbcType=VARCHAR}
  </update>
  
  	<update id="syncRid" parameterType="map">
  		begin;
  			update jk.t_jk_contact set r_customer_coborrower_id=#{loanCustomerId} where loan_code=#{loanCode} and loan_customter_type=#{customerType};
  			update jk.t_jk_loan_company set r_id=#{loanCustomerId} where loan_code=#{loanCode} and dict_r_customter_type=#{customerType};
  			update jk.t_jk_loan_house set r_customer_coborrower_id=#{loanCustomerId} where loan_code=#{loanCode} and loan_customter_type=#{customerType};
  		end;
  	</update>
  	
	<select id="selectUnSettleData" parameterType="map" resultType="Map">
	  	select count::int, role::int from 
		(
			select count(li.loan_code) as count, 1 as role from jk.t_jk_loan_customer as lc inner join jk.t_jk_loan_info as li on lc.loan_code = li.loan_code where lc.customer_cert_num = #{certNum} 
			<if test="loanCode != null and loanCode != ''"> and li.loan_code != #{loanCode} </if>
			and (li.dict_loan_status is null or li.dict_loan_status not in ('8', '34', '35', '36', '52', '53', '54', '55', '56', '57', '73', '81', '811', '97', '74', '89', '90', '101'))
			union all
			select count(li.loan_code) as count, 2 as role from jk.t_jk_loan_mate as lm inner join jk.t_jk_loan_info as li on lm.loan_code = li.loan_code where lm.mate_cert_num = #{certNum} 
			<if test="loanCode != null and loanCode != ''"> and li.loan_code != #{loanCode} </if>
			and (li.dict_loan_status is null or li.dict_loan_status not in ('8', '34', '35', '36', '52', '53', '54', '55', '56', '57', '73', '81', '811', '97', '74', '89', '90', '101'))
			union all
			select count(li.loan_code) as count, 3 as role from jk.t_jk_loan_coborrower as lco inner join jk.t_jk_loan_info as li on lco.loan_code = li.loan_code and li.loaninfo_oldornew_flag = '0' where lco.cobo_cert_num = #{certNum} 
			<if test="loanCode != null and loanCode != ''"> and li.loan_code != #{loanCode} </if>
			and (li.dict_loan_status is null or li.dict_loan_status not in ('8', '34', '35', '36', '52', '53', '54', '55', '56', '57', '73', '81', '811', '97', '74', '89', '90', '101'))
			union all
			select count(li.loan_code) as count, 4 as role from jk.t_jk_audit_result as ar left join  jk.t_jk_loan_coborrower as lco on ar.best_coborrower_id = lco.id inner join jk.t_jk_loan_info as li on lco.loan_code = li.loan_code and li.loaninfo_oldornew_flag = '1' where lco.cobo_cert_num = #{certNum} 
			<if test="loanCode != null and loanCode != ''"> and li.loan_code != #{loanCode} </if>
			and (li.dict_loan_status is null or li.dict_loan_status not in ('8', '34', '35', '36', '52', '53', '54', '55', '56', '57', '73', '81', '811', '97', '74', '89', '90', '101'))
		)
	</select>
	<!-- 新 信借待办列表 -->
  	<select id="findBorrow" parameterType="com.creditharmony.loan.common.workFlow.view.LoanFlowQueryParam"
  	 resultType="com.creditharmony.loan.common.workFlow.view.LoanFlowWorkItemView">
	  	 select '1' id
	  	 	,c.apply_id
 			,l.loaninfo_oldornew_flag loanInfoOldOrNewFlag
 			,l.loan_code 
 			,c.back_flag backFlag
	  	 	,c.contract_code contractCode
			,l.loan_customer_name customerName
			,case when (select string_agg(cobo_name,',') from jk.t_jk_loan_coborrower where loan_code = l.loan_code) is null then
			(select cobo_name from jk.t_jk_loan_coborrower where id = (select best_coborrower_id  from  jk.t_jk_audit_result where loan_code  = l.loan_code order by create_time desc limit 1)) else
			(select string_agg(cobo_name,',') from jk.t_jk_loan_coborrower where loan_code = l.loan_code) end
			 as coborrowerName
			,o.name storeName
			,p.product_name applyProductName
			,p1.product_name replyProductName
			,l.dict_loan_status loanStatusCode
			,l.loan_audit_amount replyMoney
			,l.loan_audit_months replyMonth
			,l.loan_urgent_flag urgentFlag
			,lc.customer_telesales_flag telesalesFlag
			,u.name teamManagerName
			,u1.name customerManagerName
			,l.customer_into_time intoLoanTime
			,l.model 
			,c.channel_flag channelName
			,(select case when operate_result = '退回' then remark else '' end from jk.t_jk_loan_status_his  where loan_code=l.loan_code order by create_time desc limit 1) backReason
			,fi.wob_num
			,fi.token
			,l.issplit
		from (select * from jk.t_jk_loan_info where issplit!='2'
			
				<if test="storeOrgId != null  and storeOrgId !=''">
	       			 and loan_store_orgid = #{storeOrgId}
	     	    </if>
		      	<if test="loanStatusCode != null  and loanStatusCode !=''">
	       			 and dict_loan_status in (${loanStatusCode})
	     	    </if>
	     	  
			) l
		left join jk.t_jk_loan_customer lc on lc.loan_code=l.loan_code
		left join jk.t_jk_contract c on c.loan_code=l.loan_code
		left join jk.t_gl_org o on o.id=l.loan_store_orgid
		left join jk.t_gl_jk_product p on l.product_type=p.product_code
		left join jk.t_gl_jk_product p1 on l.loan_audit_product = p1.product_code
		left join jk.t_gl_user u on l.loan_team_managercode = u.id
		left join jk.t_gl_user u1 on l.loan_managercode = u1.id
		left join jk.t_gl_user u2 on l.loan_survey_emp_id = u2.id
		left join jk.t_jk_filenet_info fi on c.apply_id = fi.apply_id
		<where>
     	    
			<if test="customerName != null  and customerName !=''">
	       		 and l.loan_customer_name LIKE '%${customerName}%'
	      	</if> 
	      	<if test="applyProductCode != null  and applyProductCode !=''">
       			 and p.product_code = #{applyProductCode}
     	    </if>
	      	<if test="replyProductCode != null  and replyProductCode !=''">
       			 and p1.product_code = #{replyProductCode}
     	    </if>
	      	 <if test="teamManagerName != null  and teamManagerName !=''">
       			 and u.name LIKE '%${teamManagerName}%'
     		 </if> 
	      	 <if test="customerManagerName != null  and customerManagerName !=''">
       			 and u1.name LIKE '%${customerManagerName}%'
     		 </if> 
	      	 <if test="identityCode != null  and identityCode !=''">
       			 and lc.customer_cert_num LIKE '%${identityCode}%'
     		 </if> 
	      	<if test="model != null  and model !=''">
       			 and l.model = #{model}
     	    </if>
	      	<if test="channelCode != null  and channelCode !=''">
       			 and l.loan_flag = #{channelCode}
     	    </if>
	      	<if test="telesalesFlag != null  and telesalesFlag !=''">
       			 and lc.customer_telesales_flag = #{telesalesFlag}
     	    </if>
	      	<if test="urgentFlag != null  and urgentFlag !=''">
       			 and l.loan_urgent_flag = #{urgentFlag}
     	    </if>
	      	<if test="additionalFlag != null  and additionalFlag !=''">
       			 and l.dict_is_additional = #{additionalFlag}
     	    </if>
	      	 <if test="visitUserName != null  and visitUserName !=''">
       			 and u2.name LIKE '%${visitUserName}%'
     		 </if> 
	      	
		</where>
		
	</select>
	<insert id="addFileNet" parameterType="com.creditharmony.bpm.frame.view.WorkItemView">
		insert into jk.t_jk_filenet_info(apply_id,wob_num,token)
		values(#{bv.applyId},#{wobNum},#{token})
	</insert>
	<delete id="deleteFileNet" parameterType="String">
		delete from jk.t_jk_filenet_info where apply_id = #{applyId}
	</delete>
	
	<select id="findStatus" parameterType="String" resultMap="BaseResultMap">
     	select 
     	<include refid="Base_Column_List"/>
      	from jk.t_jk_loan_info where dict_loan_status = #{dictLoanStatus}
  	</select>
  	
  	<select id="findFrozenInt" parameterType="com.creditharmony.loan.borrow.applyinfo.entity.LoanInfo" resultType="java.lang.Integer">
  		select count(*) 
  		from jk.t_jk_loan_info 
  		<where>
  		<if test="loanCode != null and loanCode != ''">
  			and loan_code = #{loanCode}
  		</if>
  		<if test="dictLoanStatus != null and dictLoanStatus != ''">
  			and dict_loan_status = #{dictLoanStatus}
  		</if>
  		<if test="frozenFlag != null and frozenFlag != ''">
  			and frozen_flag = #{frozenFlag}
  		</if>
  		</where>
  	</select>
  	
	  <update id="updateOldLoanCodeByLoanCode" parameterType="string">
	     update jk.t_jk_loan_info
	     set old_loan_code = #{loanCode,jdbcType=VARCHAR}       
	     where loan_code = #{loanCode,jdbcType=VARCHAR}
	  </update>
	  
	<!--zmq 交割更新loanInfo表 -->
	<update id="updateLoanInfoDelivery" parameterType="com.creditharmony.loan.borrow.delivery.entity.ex.DeliveryViewExNew">
	     update jk.t_jk_loan_info
	     <set>
		      <if test="loanStoreOrgId!=null and loanStoreOrgId!=''">
		        loan_store_orgid = #{loanStoreOrgId,jdbcType=VARCHAR},
		      </if>
		      <if test="managerCode!=null and managerCode!=''">
		        loan_managercode = #{managerCode,jdbcType=VARCHAR},
		      </if>
		      <if test="teamManagerCode != null and teamManagerCode!=''">
		        loan_team_managercode = #{teamManagerCode,jdbcType=VARCHAR},
		      </if>
		      <if test="loanTeamOrgId != null and loanTeamOrgId!=''">
		        loan_team_orgid = #{loanTeamOrgId,jdbcType=VARCHAR},
		      </if>   
		      <if test="customerServicesCode != null and customerServicesCode != ''">
		        loan_customer_service = #{customerServicesCode,jdbcType=VARCHAR},
		      </if>
		      <if test="deliveryResult != null and deliveryResult != ''">
		      	delivery_result = #{deliveryResult,jdbcType=VARCHAR},
		      </if>
      		 <if test="deliveryTime != null and deliveryTime!='' ">
       			 delivery_time = #{deliveryTime,jdbcType=TIMESTAMP}
    	     </if>
	     </set>
	     where loan_code = #{loanCode,jdbcType=VARCHAR}
  </update>
  
  <update id="updateLoanInfoStatusByContractCode" parameterType="com.creditharmony.loan.borrow.applyinfo.entity.LoanInfo">
     update jk.t_jk_loan_info li
    <set>
		dict_loan_status = #{dictLoanStatus,jdbcType=VARCHAR}
		<if test="modifyBy!=null and modifyBy!=''">
      		,modify_by=#{modifyBy}
      	</if>
      	<if test="modifyTime!=null and modifyTime!=''">
      		,modify_time=#{modifyTime}
      	</if>
    </set>
    from jk.t_jk_contract c
    where li.loan_code=c.loan_code
    and c.contract_code = #{contractCode,jdbcType=VARCHAR}
  </update>
</mapper>