<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.creditharmony.loan.borrow.grant.dao.JXCreditorBackDao">
  <resultMap id="baseResultMap" type="com.creditharmony.loan.common.workFlow.view.LoanFlowWorkItemView">
    <result column="apply_id" jdbcType="VARCHAR" property="applyId" />
    <result column="loan_code" jdbcType="VARCHAR" property="loanCode"  />
    <result column="contract_code" jdbcType="VARCHAR" property="contractCode" />
    <result column="name" jdbcType="VARCHAR" property="storeName" />
    <result column="cobo_name" jdbcType="VARCHAR" property="coborrowerName" />
    <result column="product_name" jdbcType="VARCHAR" property="replyProductName" /><!-- 借款产品名称 -->
    <result column="grant_amount" jdbcType="NUMERIC" property="lendingMoney" />
    <result column="contract_amount" jdbcType="NUMERIC" property="contractMoney" />
    <result column="fee_urged_service" jdbcType="NUMERIC" property="urgeServiceFee" />
    <result column="loan_customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="customer_cert_num" jdbcType="VARCHAR" property="identityCode" />
    <result column="loan_flag" jdbcType="VARCHAR" property="channelName" />
    <result column="loan_urgent_flag" jdbcType="VARCHAR" property="urgentFlag" />
    <result column="bank_name" jdbcType="VARCHAR" property="depositBank" />
    <result column="bank_branch" jdbcType="VARCHAR" property="bankBranchName" />
    <result column="bank_account" jdbcType="VARCHAR" property="bankAccountNumber" />
    <result column="dict_loan_way" jdbcType="VARCHAR" property="lendingWayName" />
    <result column="contract_months" jdbcType="NUMERIC" property="replyMonth" />
    <result column="customer_telesales_flag" jdbcType="VARCHAR" property="telesalesFlag"/>
    <result column="grant_recepic_result" jdbcType="VARCHAR" property="receiptResult"/>
    <result column="grant_fail_result" jdbcType="VARCHAR" property="failReason"/>
    <result column="grant_batch" jdbcType="VARCHAR" property="grantBatchCode"/>
    <result column="grant_pch" jdbcType="VARCHAR" property="submissionBatch"/>
    <result column="loan_store_orgid" jdbcType="VARCHAR" property="storeOrgId"/>
    <result column="bank_account_name" jdbcType="VARCHAR" property="custBankAccountName"/>
     <result column="issplit" jdbcType="VARCHAR" property="issplit"/>
  </resultMap>
  
  <!-- 债权退回列表数据显示 -->
  <select id="getJXCreditorBackList" resultMap="baseResultMap">
	select
		a.id, --放款id 
		a.loan_code, --借款编码
		d.apply_id, --applyId
		a.contract_code, --合同编号
		b.loan_customer_name, --客户姓名
		b.issplit, --拆分标志
		c.customer_cert_num, --证件号码
		d.cobo_name as coborrowerName, --共借人
		(select cobo_name from jk.t_jk_loan_coborrower w where id=(select best_coborrower_id from( 
		select best_coborrower_id from jk.t_jk_audit_result t where loan_code=e.loan_code  order by create_time desc 
		limit 1))) as coborrowerName,-- 自然人保证人
		(select product_name from jk.t_gl_jk_product t where t.product_code = d.product_type) as replyProductName, --借款产品
		f.fee_month_rate as monthRate, --借款利率
		e.bank_account_name, --账户姓名
		round(d.contract_amount,2) as contractMoney,--合同金额
		round(a.grant_amount,2) as lendingMoney,-- 放款金额
		round(f.fee_urged_service,2) as urgeServiceFee, --催收服务费
		round(sum(grant_amount) OVER (),2) as totalGrantMoney, --放款总金额
		d.contract_months, --批复期限
		e.bank_branch,--支行
		(select label from jk.t_gl_dict d where d.type = 'jk_open_bank' and d.value = e.bank_name) as depositBank,--开户行
		e.bank_account, --账户
		d.contract_back_result as backReason, --退回原因
		(select label from jk.t_gl_dict d where d.type = 'jk_channel_flag' and d.value = b.loan_flag) as channelName, --渠道
		b.model, --模式
		(select label from jk.t_gl_dict d where d.type = 'jk_loan_apply_status' and d.value = b.dict_loan_status) as loanStatusName,--借款状态
		d.contract_version, --合同版本号
		d.paperless_flag, --是否无纸化
		d.sign_up_flag, --是否加盖
		case when d.company_name is not null 
    	 then '1' else '0' end as ensure_flag, --是否有保证人
    	d.is_register as registFlag, --是否注册
    	d.revisit_status, --回访状态
    	d.auditing_time as checkTime, --审核时间
		b.loan_urgent_flag as urgentFlag,--加急标识
		c.customer_telesales_flag as telesalesFlag, --是否电销
		b.loaninfo_oldornew_flag, --新老标识
		b.frozen_flag, --是否门店申请冻结
		case when t.verify_risk_level is not null and reconsider_risk_level is not null then reconsider_risk_level 
		else verify_risk_level end as riskLevel, --风险等级
		(select label from jk.t_gl_dict where type = 'jk_trust_status' and value = b.trust_cash) as trustCash, --委托提现
		b.loan_store_orgid as storeOrgId, --门店id
		h.name as storeName --门店名称
	from jk.t_jk_loan_grant a
	left join jk.t_jk_loan_info b on b.loan_code = a.loan_code 
	left join jk.t_jk_loan_customer c on c.loan_code = b.loan_code
	left join jk.t_jk_contract d on d.loan_code = a.loan_code 
	left join jk.t_jk_loan_bank e on e.loan_code = d.loan_code and e.bank_top_flag = '1' and e.repayment_flag = '0'
	left join jk.t_jk_contract_fee f on f.contract_code = d.contract_code
	left join jk.t_jk_audit_rating t on t.loan_code = b.loan_code
	left join jk.t_gl_org h on h.id = b.loan_store_orgid
	left join jk.t_gl_jk_product p on p.product_code = d.product_type
	where b.dict_loan_status in ('99','100') and b.loan_flag='0' 
	  <if test="loanStatusCode != null and loanStatusCode != ''">
			and b.dict_loan_status = #{loanStatusCode}
	  </if>
      <if test="identityCode != null and identityCode != ''" >
        and c.customer_cert_num LIKE CONCAT('%', #{identityCode}, '%')
      </if>
      <if test="customerName != null and customerName != ''" >
        and b.loan_customer_name LIKE CONCAT('%', #{customerName}, '%')
      </if>
      <if test="contractCode != null and contractCode != ''" >
        and a.contract_code = #{contractCode}
      </if>
      <if test="storeOrgIds != null and storeOrgIds != ''" > <!-- 门店id -->
      	and b.loan_store_orgid in
		<foreach item="item" index="index" collection="storeOrgIds" open="(" separator="," close=")">  
        	 #{item}  
       	</foreach> 
      </if>
      <if test="storeOrgId != null and storeOrgId !=''" > <!-- 门店id -->
      	and b.loan_store_orgid=#{storeOrgId}
      </if>
      <if test="applyIds != null">
      	and d.apply_id in
      	<foreach item="item" index="index" collection="applyIds" open="(" separator="," close=")">
      		#{item}
      	</foreach>
      </if>
      <if test="revisitStatus != null and revisitStatus != '' and revisitQueryName=='kong'.toString()" > <!-- 回访状态 -->
      	and (d.revisit_status in
		<foreach item="item" index="index" collection="revisitStatus" open="(" separator="," close=")">  
        	 #{item}  
       	</foreach> 
       	 or d.revisit_status is null )
      </if>
      <if test="revisitStatus != null and revisitStatus != '' and revisitQueryName!='kong'.toString()" > <!-- 回访状态 -->
      	and d.revisit_status in
		<foreach item="item" index="index" collection="revisitStatus" open="(" separator="," close=")">  
        	 #{item}  
       	</foreach> 
      </if>
      <if test="channelCode != null and channelCode!= ''">
      	and b.loan_flag = #{channelCode}
      </if>
      <if test="additionalFlag != null and additionalFlag != ''">
      	and dict_is_additional = #{additionalFlag}
      </if>
	  <if test="telesalesFlag != null and telesalesFlag != ''">
	  	and customer_telesales_flag =#{telesalesFlag}
	  </if>
	  <if test="urgentFlag != null and urgentFlag != ''">
	  	and loan_urgent_flag = #{urgentFlag}
	  </if>
	  <if test="trustCash != null and trustCash != ''">
	  	and trust_cash = #{trustCash}
	  </if>
	  <if test="riskLevel != null and riskLevel != ''">
	  	and (case when reconsider_risk_level is not null then reconsider_risk_level = #{riskLevel} else verify_risk_level = #{riskLevel} end)
	  </if>
	  <if test="paperLessFlag != null and paperLessFlag != ''">
	  	and paperless_flag = #{paperLessFlag}
	  </if>
	  <if test="replyProductCode != null and replyProductCode != ''">
	  	and p.product_code = #{replyProductCode}
	  </if>
	  <if test="contractVersion != null and contractVersion != ''">
	  	and contract_version = #{contractVersion}
	  </if>
	  <if test = "frozenFlag != null and frozenFlag != ''">
	  	and frozen_flag = #{frozenFlag}
	  </if>
	  <if test = "ensureManFlag != null and ensureManFlag != ''">
	  	and (case when #{ensureManFlag} ='1' then company_name is not null else company_name is null end)
	  </if>
	  <if test = "registFlag != null and registFlag != ''">
	  	and is_register = #{registFlag}
	  </if>
	  <if test = "signUpFlag != null and signUpFlag != ''">
	  	and sign_up_flag = #{signUpFlag}
	  </if>
	  <if test = "checkTime != null and checkTime != ''">
	  	and to_date(to_char(auditing_time,'yyyy-MM-dd')) = #{checkTime}
	  </if>
	  order by b.order_field
  </select>
  
</mapper>